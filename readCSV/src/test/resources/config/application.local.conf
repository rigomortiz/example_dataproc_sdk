ReadCsv {
  params {
    message = ${?MESSAGE}
  }
  input {
    bikes {
      type = csv
      delimiter = |
      schema {
        path = "readCSV/src/test/resources/data/schemas/bikes.input.schema"
      }
      paths = ["readCSV/src/test/resources/data/input/csv/t_fdev_bikes"]
    }
    customer {
      type = csv
      delimiter = |
      schema {
        path = "readCSV/src/test/resources/data/schemas/customer.input.schema"
      }
      paths = ["readCSV/src/test/resources/data/input/csv/t_fdev_customer"]
    }
  }
  output {
    customerBikes {
      schema {
        path = "readCSV/src/test/resources/data/schemas/step7.output.schema"
      }
      path = "readCSV/src/test/resources/data/output/parquet/t_fdev_customer_bikes"
      partitions = ["country"]
      mode = overwrite
      type = parquet
      options {
        includeMetadataFields = true
        includeDeletedFields  = true
        partitionsOverwriteMode = dynamic
        coalesce = 1
      }
    }
  }
}